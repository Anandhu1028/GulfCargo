{
    "sourceFile": "app/Http/Controllers/Branch/ShipmentController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1733383430511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733383436516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -928,9 +928,9 @@\n                             $box->receiver_id_image =  json_encode($receiver_id_image);\n                         }\n                         else{\n                             $box->receiver_id_image = $request->input(\"receiver_id_image_value\".$j);\n-                            \n+                            $box ->\n                         }\n \n \n \n"
                },
                {
                    "date": 1733383443603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -928,9 +928,8 @@\n                             $box->receiver_id_image =  json_encode($receiver_id_image);\n                         }\n                         else{\n                             $box->receiver_id_image = $request->input(\"receiver_id_image_value\".$j);\n-                            $box ->\n                         }\n \n \n \n"
                },
                {
                    "date": 1733383456903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -928,8 +928,9 @@\n                             $box->receiver_id_image =  json_encode($receiver_id_image);\n                         }\n                         else{\n                             $box->receiver_id_image = $request->input(\"receiver_id_image_value\".$j);\n+                            @if \n                         }\n \n \n \n"
                },
                {
                    "date": 1733383465507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -928,9 +928,9 @@\n                             $box->receiver_id_image =  json_encode($receiver_id_image);\n                         }\n                         else{\n                             $box->receiver_id_image = $request->input(\"receiver_id_image_value\".$j);\n-                            @if \n+                            $box\n                         }\n \n \n \n"
                },
                {
                    "date": 1733383475805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -928,9 +928,9 @@\n                             $box->receiver_id_image =  json_encode($receiver_id_image);\n                         }\n                         else{\n                             $box->receiver_id_image = $request->input(\"receiver_id_image_value\".$j);\n-                            $box\n+                            $box-> reciveri\n                         }\n \n \n \n"
                },
                {
                    "date": 1733383483088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -928,9 +928,9 @@\n                             $box->receiver_id_image =  json_encode($receiver_id_image);\n                         }\n                         else{\n                             $box->receiver_id_image = $request->input(\"receiver_id_image_value\".$j);\n-                            $box-> reciveri\n+                            $box-> reciver_id =\n                         }\n \n \n \n"
                },
                {
                    "date": 1733383490954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -928,9 +928,9 @@\n                             $box->receiver_id_image =  json_encode($receiver_id_image);\n                         }\n                         else{\n                             $box->receiver_id_image = $request->input(\"receiver_id_image_value\".$j);\n-                            $box-> reciver_id =$request ->\n+                            $box-> reciver_id =$request ->i\n                         }\n \n \n \n"
                },
                {
                    "date": 1733383501072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -928,9 +928,9 @@\n                             $box->receiver_id_image =  json_encode($receiver_id_image);\n                         }\n                         else{\n                             $box->receiver_id_image = $request->input(\"receiver_id_image_value\".$j);\n-                            $box-> reciver_id =$request ->(!=\n+                            $box-> reciver_id =$request ->(!=0\n                         }\n \n \n \n"
                }
            ],
            "date": 1733383430511,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\Branch;\n\nuse App\\Http\\Controllers\\BaseController;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Agencies;\nuse App\\Models\\Branches;\nuse App\\Models\\Countries;\nuse App\\Models\\Customers;\nuse App\\Models\\Packages;\nuse App\\Models\\Shipments;\nuse App\\Models\\BoxDimensions;\nuse App\\Models\\Discount;\nuse App\\Models\\Weight;\nuse App\\Models\\Statuses;\nuse App\\Models\\Ships;\nuse App\\Models\\ShipsBookings;\nuse App\\Models\\ShipTypes;\nuse App\\Models\\MovingTypes;\nuse App\\Models\\States;\nuse App\\Models\\Boxes;\nuse App\\Models\\Drivers;\nuse App\\Models\\Staffs;\nuse App\\Models\\ShipmentsStatuses;\nuse App\\Models\\Cities;\nuse App\\Models\\Districts;\nuse App\\Models\\GoodsDetails;\nuse App\\Models\\BoxesStatuses;\nuse App\\Models\\ShipmentTransfers;\nuse App\\Models\\BookingStatus;\nuse App\\Models\\Box_sender_reciver;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Log;\nuse Illuminate\\Support\\Facades\\DB;\nuse Illuminate\\Support\\Facades\\Str;\nuse App\\Exports\\LoadingListExport;\nuse Maatwebsite\\Excel\\Facades\\Excel;\nuse DataTables;\nuse Illuminate\\Support\\Facades\\Http;\nuse Carbon\\Carbon;\nuse App\\Jobs\\SendWhatsAppMessage;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass ShipmentController extends BaseController\n{\n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n\n\n     public function index(Request $request)\n    {\n        $search = null;\n        $fromDate = '';\n        $toDate = '';\n        $branchId = '';\n        if ($request->has('keyword') != \"\") {\n            $keyword = $request->keyword;\n            $client_ids = Customers::where(\"phone\", \"like\", \"%$keyword%\")\n                ->orWhere(\"identification_number\", \"like\", \"%$keyword%\")\n                ->get()\n                ->pluck('id');\n\n            $shipments = Shipments::with('driver')->where('branch_id',branch()->id)->query()->paginate(10);\n            if (count($client_ids) > 0) {\n                $shipments = $shipments->whereIn(\"sender_id\", $client_ids);\n            }\n            $shipments = $shipments->orWhere('booking_number', 'like', '%' . $keyword . '%');\n            // $shipments = $shipments->where('branch_id', branch()->id);\n\n            $shipments = $shipments->orderBy('created_at', 'desc')->get();\n\n\n        } else {\n            // $shipments = Shipments::latest()->where('branch_id', branch()->id)->orderBy('created_at', 'desc')->get();\n            $fromDate = $request->input('from_date');\n            $toDate = $request->input('to_date');\n            $search = $request->input('search');\n            $branchId = $request->input('branch');\n\n            $query = Shipments::with('driver', 'boxes.boxStatuses.status', 'sender', 'receiver');\n\n            if ($branchId) {\n                $query->where('branch_id', $branchId); // Adjust 'branch_id' to your actual column name\n            } else {\n                $query->where('branch_id', branch()->id);\n            }\n\n            if ($fromDate) {\n                $fromDate = Carbon::createFromFormat('d/m/Y', $fromDate)->startOfDay()->toDateString();\n                $query->whereDate('created_at', '>=', $fromDate);\n            }\n\n            if ($toDate) {\n                $toDate = Carbon::createFromFormat('d/m/Y', $toDate)->endOfDay()->toDateString();\n                $query->whereDate('created_at', '<=', $toDate);\n            }\n\n            if ($search) {\n                $query->where(function ($query) use ($search) {\n                    $query->where('booking_number', 'like', \"%$search%\")\n                        ->orWhereHas('sender', function ($query) use ($search) {\n                            $query->where('phone', 'like', \"%$search%\");\n                        })\n                        ->orWhereHas('sender', function ($query) use ($search) {\n                            $query->where('name', 'like', \"%$search%\");\n                        })\n                        ->orWhereHas('sender', function ($query) use ($search) {\n                            $query->where('whatsapp_number', 'like', \"%$search%\");\n                        })\n                        ->orWhereHas('receiver', function ($query) use ($search) {\n                            $query->where('phone', 'like', \"%$search%\");\n                        })\n                        ->orWhereHas('receiver', function ($query) use ($search) {\n                            $query->where('name', 'like', \"%$search%\");\n                        })\n                        ->orWhereHas('receiver', function ($query) use ($search) {\n                            $query->where('whatsapp_number', 'like', \"%$search%\");\n                        });\n                });\n            }\n\n            $shipments = $query->latest()->orderBy('created_at', 'desc')->paginate(10);\n        }\n\n        foreach($shipments as $key => $ships) {\n            foreach($ships->boxes as $status) {\n                $lastStatus = collect($status->boxStatuses)->last();\n                $shipments[$key][\"last_status\"] = (!empty($lastStatus)) ? $lastStatus->status->name : \"\";\n            }\n        }\n\n        return view('branches.shipments.index', compact('shipments','search', 'fromDate', 'toDate'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create()\n    {\n\n        // dd(branch()->id);\n        $agencies = Agencies::whereActive(true)->get();\n        $branches = Branches::all();\n        $movingTypes = MovingTypes::whereStatus(true)->get();\n\n        $drivers = Drivers::whereActive(true)->orderBy('name')->where('branch_id',branch()->id)->get();\n        $staffs = Staffs::notadmin()->where('branch_id',branch()->id)->get();\n\n\n        // $previous_sender = Customers::where('type','sender')->orderBy('name', 'asc')->first();\n        // $previous_receiver = Customers::where('type','receiver')->orderBy('name', 'asc')->first();\n        // $previous_receiver_state = States::where('country_id',  $previous_receiver->address->country_id )->get();\n        // $previous_receiver_city = Cities::where('state_id', $previous_receiver->address->state_id )->get();\n\n        // $previous_sender_state = States::where('country_id',  $previous_sender->address->country_id)->get();\n        // $previous_sender_city = Cities::where('state_id', $previous_sender->address->state_id )->get();\n\n        // $prev_sender_phon_length =Countries::select('phone_no_length')->where('id',  $previous_sender->address->country_id )->first();\n        // $prev_receiver_phon_length =Countries::select('phone_no_length')->where('id',  $previous_receiver->address->country_id )->first();\n\n\n\n        $ship_types = ShipTypes::all();\n\n        $countries =  Countries::all();\n\n        // $previous_booking = Shipments::orderBy('id', 'desc')->first();\n\n        // $nextBookingNumber = branch()->branch_code;\n        $shipment  =   Shipments::select('id','booking_number')->orderBy('id', 'desc')->first();\n        $shipm = Shipments::where('branch_id', branch()->id)\n            ->where(function($query) {\n                $query->where('is_change_booking_no', 0)\n                    ->orWhereNull('is_change_booking_no');\n            })->get();\n\n        if(!empty($shipment)){\n            $bookingNum = $shipment->id+1000;\n            $nextBookingNumber = branch()->branch_code ? branch()->branch_code.count($shipm)+1+1000 : $shipment->id+10000;\n        }\n        else{\n            // $shipment =10000;\n            $bookingNum = 1000;\n            $nextBookingNumber = branch()->branch_code ? branch()->branch_code.$bookingNum : $bookingNum;\n\n        }\n        $previous_sender = Customers::where('type','sender')->orderBy('id', 'desc')->first();\n        $previous_receiver = Customers::where('type','receiver')->orderBy('id', 'desc')->first();\n        $previous_receiver_state = States::where('country_id',  $previous_receiver->address->country_id )->get();\n        $previous_receiver_district = Districts::where('state_id', $previous_receiver->address->state_id )->get();\n\n        $previous_sender_state = States::where('country_id',  $previous_sender->address->country_id )->get();\n        $previous_sender_district = Districts::where('state_id', $previous_sender->address->state_id )->get();\n\n        return view('branches.shipments.create',\n            compact(\n                'agencies',\n                'countries',\n                'nextBookingNumber',\n                'drivers',\n                'ship_types',\n                'bookingNum',\n                'staffs',\n                'branches',\n                'previous_sender',\n                'previous_receiver',\n                'previous_receiver_state',\n                'previous_receiver_district',\n                'previous_sender_state',\n                'previous_sender_district'\n            ));\n\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param \\Illuminate\\Http\\Request $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        try {\n            \\DB::beginTransaction();\n            $shipments = new Shipments();\n            if($request->booking_number == $request->new_book_no){\n                $shipments->is_change_booking_no = 0;\n            }\n            else{\n                $shipments->is_change_booking_no = 1;\n            }\n            $shipments->booking_number = $request->booking_number;\n            // $shipments->agency_id = $request->agency_list;\n            $shipments->sender_id = $request->sender_id;\n            $shipments->receiver_id = $request->receiver_id;\n            $shipments->receipt_number = $request->receipt_number;\n            $shipments->packing_type = $request->packing_type;\n            $shipments->agency_id = $request->agency_id;\n\n            $shipments->shiping_method = $request->shiping_method;\n            $shipments->created_date = $request->created_date;\n\n            $shipments->payment_method = $request->payment_method;\n            $shipments->number_of_pcs_create = $request->number_of_pcs;\n            $shipments->status_id = $request->status_id;\n            $shipments->collected_by = $request->collected_by;\n            $shipments->delivery_type = $request->delivery_type;\n            $shipments->time = $request->time;\n            $shipments->shipping_method_id = $request->shipping_method_id;\n            $shipments->value_of_goods = $request->value_of_goods;\n            $shipments->special_remarks = $request->special_remarks;\n\n\n            if($request->driver_id){\n                $shipments->driver_id = $request->driver_id;\n                $shipments->staff_id = null;\n\n            } else {\n                $shipments->staff_id = $request->staff_id;\n                $shipments->driver_id = null;\n            }\n\n            $shipments->lrl_tracking_code = $request->lrl_tracking_code;\n\n            $shipments->created_by = $request->user()->id;\n            $shipments->shiping_date = date(\"Y-m-d\");\n            $shipments->branch_id = $request->branch_id;\n            $shipments->origin_id = $request->branch_id;\n\n\n            $shipments->grand_total_weight = $request->grand_total_weight;\n            $shipments->rate_normal_weight = $request->rate_normal_weight;\n            $shipments->amount_normal_weight = $request->amount_normal_weight == 0?null:$request->amount_normal_weight;\n\n            $shipments->electronics_weight = $request->electronics_weight;\n            $shipments->rate_electronics_weight = $request->rate_electronics_weight;\n            $shipments->amount_electronics_weight = $request->amount_electronics_weight == 0 ? null :$request->amount_electronics_weight;\n\n            $shipments->msic_weight = $request->msic_weight;\n            $shipments->rate_msic_weight = $request->rate_msic_weight;\n            $shipments->amount_msic_weight = $request->amount_msic_weight == 0 ? null : $request->amount_msic_weight;\n\n            $shipments->insurance = $request->insurance;\n            $shipments->rate_insurance = $request->rate_insurance;\n            $shipments->amount_insurance = $request->amount_insurance;\n\n            $shipments->awbfee = $request->awbfee;\n            $shipments->rate_awbfee = $request->rate_awbfee;\n            $shipments->amount_awbfee = $request->amount_awbfee;\n\n            $shipments->vat_amount = $request->vat_amount;\n            $shipments->rate_vat_amount = $request->rate_vat_amount;\n            $shipments->amount_vat_amount = $request->amount_vat_amount;\n\n            $shipments->volume_weight = $request->volume_weight;\n            $shipments->rate_volume_weight = $request->rate_volume_weight;\n            $shipments->amount_volume_weight = $request->amount_volume_weight;\n\n            $shipments->discount_weight = $request->discount_weight;\n            $shipments->rate_discount_weight = $request->rate_discount_weight;\n            $shipments->amount_discount_weight = $request->amount_discount_weight;\n\n            $shipments->amount_grand_total = $request->amount_grand_total;\n            $shipments->number_of_pcs_create = $request->number_of_pcs;\n            $shipments->add_pack_charge = $request->add_pack_charge;\n            $shipments->rate_add_pack_charge = $request->rate_add_pack_charge;\n            $shipments->amount_add_pack_charge = $request->amount_add_pack_charge;\n\n            $shipments->save();\n            $status = Statuses::find($request->status_id);\n            $shipments->status()->attach($status);\n\n\n\n            // $ship = Ships::where('branch_id',  branch()->id)->orderBy('created_at', 'desc')->first();\n            // if($ship){\n            //     // $shipsbooking = new ShipsBookings();\n            //     // $shipsbooking->ship_id = $ship->id;\n            //     // $shipsbooking->booking_id =  $shipments->id;\n            //     // $shipsbooking->save();\n\n            //     // $shipments->ship_id = $ship->id;\n            //     // $shipments->save();\n            // } else {\n            //     toastr()->success(section_title() . 'Please create Shipment !');\n            //     return redirect()->to(index_url());\n            // }\n            // $sender = Customers::find($request->sender_id);\n            // // dd($sender->country_code_phone.$sender->whatsapp_number.\",\".$sender->name.\",\".$request->booking_number.\",\".$request->number_of_pcs);\n            // $whatsapp_number = $sender->country_code_phone.$sender->whatsapp_number;\n            // $sender_name = $sender->name??'Customer';\n            // $booking_numb = $request->booking_number??'0';\n            // $number_of_pcs = $request->number_of_pcs??'0';\n            // $message = [\n            //     \"from_phone_number_id\"=> \"372869072582708\",\n            //     \"phone_number\"=>$whatsapp_number,\n            //     \"template_name\" => \"create_booking\",\n            //     \"template_language\" => \"en\",\n            //     \"header_field_1\" => $sender_name,\n            //     \"field_1\" => $booking_numb,\n            //     \"field_2\" => $number_of_pcs,\n            //     'contact' => [\n            //         'first_name' => \"ananthu\",\n            //         'country' => 'India',\n            //         'language_code' => 'en',\n            //         'groups' => 'examplegroup1,examplegroup2'\n            //     ]\n            // // Add more users as needed\n            // ];\n\n            //     SendWhatsAppMessage::dispatch($message);\n\n            \\DB::commit();\n        } catch (\\Exception $e) {\n\n            \\DB::rollBack();\n            Log::error($e->getMessage());\n            toastr()->error($e->getMessage());\n            return redirect()->back();\n        }\n        toastr()->success(section_title() . ' Added Successfully');\n        return redirect()->to(index_url());\n    }\n\n    /**\n     * Display the specified resource.\n     *\n     * @param int $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show($id)\n    {\n        $shipment = Shipments::with('driver','movingType','boxes','boxes.ships')->findOrFail($id);\n        $ship = null;\n        $status = null;\n        $boxId = isset($shipment->boxes[0])?$shipment->boxes[0]->id:null;\n        $statusId = $shipment->status_id ;\n\n        if (isset($shipment->boxes[0]) && $shipment->boxes[0] !== null) {\n            $ship = Ships::find($shipment->boxes[0]->ship_id) ?? '';\n        }\n\n        if ($boxId != null) {\n            $status = BoxesStatuses::where('box_id', $boxId)->latest('updated_at')->first();\n        }\n\n        $invStatus = Statuses::find($statusId);\n\n        // dd($invStatus->name);\n        return view('branches.shipments.show', compact('shipment','ship','status','invStatus'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     *\n     * @param int $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit( Request $request, $id)\n    {\n        $password = $request->query('password');\n        $correctHashedPasskey = hash('sha256', '123456');\n        $shipment = Shipments::with('driver','boxes.boxStatuses')->findOrFail($id);\n        $status = null;\n        if ($shipment->boxes->isEmpty()) {\n            $status = $shipment->status_id;\n        } else {\n            if($status == 15 || $status == 1 || $status == 2 || $status == null) {\n\n                foreach ($shipment->boxes as $box) {\n                    $latestStatus = $box->boxStatuses()->orderBy('id', 'desc')->first();\n                    if ($latestStatus && ($latestStatus->id != 15 && $latestStatus->id != 1 && $latestStatus->id != 2)) {\n                        $status = $latestStatus->status_id;\n                        break;\n                    }\n                }\n            }\n            else{\n                $status = $shipment->status_id;\n            }\n\n        }\n        // dd($status);\n        if( $status == 15 || $status == 1 || $status == 2 ||$status == null || hash_equals($correctHashedPasskey, $password??'0000')){\n            $discount = Discount::first();\n            $weight = Weight::first();\n            $dimensions = BoxDimensions::all();\n\n\n            $previous_sender = Customers::where('type','sender')->orderBy('id', 'desc')->first();\n            $previous_receiver = Customers::where('type','receiver')->orderBy('id', 'desc')->first();\n\n            $previous_receiver_state = States::where('country_id',  $previous_receiver->address->country_id )->get();\n            $previous_receiver_city = Cities::where('state_id', $previous_receiver->address->state_id )->get();\n            $previous_sender_state = States::where('country_id',  $previous_sender->address->country_id)->get();\n            $previous_sender_city = Cities::where('state_id', $previous_sender->address->state_id )->get();\n            $prev_sender_phon_length =Countries::select('phone_no_length')->where('id',  $previous_sender->address->country_id )->first();\n            $prev_receiver_phon_length =Countries::select('phone_no_length')->where('id',  $previous_receiver->address->country_id )->first();\n\n            $branches = Branches::all();\n            $ship_types = ShipTypes::all();\n\n            $bookingNum = $shipment->id+10000-1;\n\n            if($shipment->branch_id != branch()->id) {\n                toastr()->error(section_title() . 'No permission to view other branches');\n                return redirect()->to(index_url());\n            }\n            $boxes = Boxes::with('packages')->where('shipment_id', $id)->orderBy('id', 'asc')->get();\n\n            $agencies = Agencies::all();\n            $origin_offices = Branches::all();\n            $countries = Countries::all();\n            // $drivers = Drivers::whereActive(true)->get();\n            // $staffs = Staffs::notadmin()->get();\n            $drivers = Drivers::whereActive(true)->orderBy('name')->where('branch_id',branch()->id)->get();\n            $staffs = Staffs::notadmin()->where('branch_id',branch()->id)->get();\n\n            return view('branches.shipments.edit', compact('shipment' , 'bookingNum','boxes', 'agencies', 'origin_offices', 'countries','drivers','staffs','discount','dimensions','weight', 'ship_types', 'branches', 'previous_sender', 'previous_receiver', 'previous_sender_state','previous_sender_city','previous_receiver_state', 'previous_receiver_city', 'prev_receiver_phon_length', 'prev_sender_phon_length' ));\n        }\n        else{\n            return redirect()->back()->with('showModal', true);\n        }\n    }\n\n\n    public function saveAsDraft(Request $request)\n    {\n        if($request->ajax()){\n            try {\n                \\DB::beginTransaction();\n\n                $shipments = Shipments::findOrFail($request->id);\n\n                $shipments->booking_number = $request->booking_number;\n                // $shipments->agency_id = $request->agency_list;\n                $shipments->sender_id = $request->sender_id;\n                $shipments->receiver_id = $request->receiver_id;\n                $shipments->receipt_number = $request->receipt_number;\n                $shipments->packing_type = $request->packing_type;\n                $shipments->agency_id = $request->agency_id;\n                Log::info($request->shiping_method);\n                $shipments->shiping_method = $request->shiping_method;\n                $shipments->payment_method = $request->payment_method;\n                $shipments->number_of_pcs = $request->number_of_pcs;\n                $shipments->status_id = $request->status_id;\n                $shipments->delivery_type = $request->delivery_type;\n                $shipments->time = $request->time;\n                $shipments->shipping_method_id = $request->shiping_method;\n                $shipments->value_of_goods = $request->value_of_goods;\n                $shipments->special_remarks = $request->special_remarks;\n\n\n\n                $shipments->collected_by = $request->collected_by;\n                if($request->driver_id){\n                    $shipments->driver_id = $request->driver_id;\n                    $shipments->staff_id = null;\n\n                } else {\n                    $shipments->staff_id = $request->staff_id;\n                    $shipments->driver_id = null;\n                }\n\n                $shipments->lrl_tracking_code = $request->lrl_tracking_code;\n                $shipments->created_by = $request->user()->id;\n                $shipments->shiping_date = date(\"Y-m-d\");\n                // $shipments->branch_id = branch()->id;\n                $shipments->branch_id = $request->branch_id;\n                $shipments->origin_id = $request->branch_id;\n\n                $shipments->created_date = $request->created_date;\n\n                $shipments->barcode = $request->barcode;\n                $shipments->prev_branch_id = $request->prev_branch_id;\n                $shipments->created_by = $request->user()->id;\n                $shipments->packing_charge = $request->packing_charge;\n                $shipments->comment_box = $request->comment_box;\n\n\n                $shipments->other_charges = $request->other_charges;\n                $shipments->discount = $request->discount;\n\n                $shipments->normal_weight = $request->normal_weight;\n                $shipments->rate_normal_weight = $request->rate_normal_weight;\n                $shipments->amount_normal_weight = $request->amount_normal_weight == 0?null:$request->amount_normal_weight;\n\n                $shipments->electronics_weight = $request->electronics_weight;\n                $shipments->rate_electronics_weight = $request->rate_electronics_weight;\n                $shipments->amount_electronics_weight = $request->amount_electronics_weight == 0 ? null :$request->amount_electronics_weight;\n\n                $shipments->msic_weight = $request->msic_weight;\n                $shipments->rate_msic_weight = $request->rate_msic_weight;\n                $shipments->amount_msic_weight = $request->amount_msic_weight == 0 ? null : $request->amount_msic_weight;\n\n                $shipments->other_weight = $request->other_weight;\n                $shipments->rate_other_weight = $request->rate_other_weight;\n                $shipments->amount_other_weight = $request->amount_other_weight;\n\n                $shipments->grand_total_weight = $request->grand_total_weight;\n                $shipments->rate_grand_total = $request->rate_grand_total;\n                $shipments->amount_grand_total = $request->amount_grand_total;\n\n                $shipments->add_pack_charge = $request->add_pack_charge;\n                $shipments->rate_add_pack_charge = $request->rate_add_pack_charge;\n                $shipments->amount_add_pack_charge = $request->amount_add_pack_charge;\n\n                $shipments->insurance = $request->insurance;\n                $shipments->rate_insurance = $request->rate_insurance;\n                $shipments->amount_insurance = $request->amount_insurance;\n\n                $shipments->awbfee = $request->awbfee;\n                $shipments->rate_awbfee = $request->rate_awbfee;\n                $shipments->amount_awbfee = $request->amount_awbfee;\n\n                $shipments->vat_amount = $request->vat_amount;\n                $shipments->rate_vat_amount = $request->rate_vat_amount;\n                $shipments->amount_vat_amount = $request->amount_vat_amount;\n\n                $shipments->volume_weight = $request->volume_weight;\n                $shipments->rate_volume_weight = $request->rate_volume_weight;\n                $shipments->amount_volume_weight = $request->amount_volume_weight;\n\n                $shipments->discount_weight = $request->discount_weight;\n                $shipments->rate_discount_weight = $request->rate_discount_weight;\n                $shipments->amount_discount_weight = $request->amount_discount_weight;\n\n                $shipments->grand_total_box_value = $request->grand_total_box_value;\n                $shipments->total_freight = $request->total_freight;\n                $shipments->misc_freight = $request->misc_freight;\n                $shipments->document_charge = $request->document_charge;\n                $shipments->grand_total = $request->grand_total;\n                $shipments->package_total_amount = $request->package_total_amount;\n                $shipments->package_total_quantity = $request->package_total_quantity;\n\n                $shipments->save();\n\n                $status = Statuses::find($request->status_id);\n                $shipments->status()->attach($status);\n\n\n\n                Boxes::where('shipment_id', $shipments->id)->delete();\n                Packages::where('shipment_id', $shipments->id)->delete();\n                Box_sender_reciver::where('shipment_id', $shipments->id)->delete();\n\n                for ($i = 0; $i < $request->number_of_pcs; $i++) {\n                    $j= $i+1;\n                    $box = new Boxes();\n                    $box->shipment_id = $shipments->id;\n                    if($request->number_of_pcs == 1){\n                        $box->box_name\t = $request->booking_number;\n                    }\n                    elseif($i == 0 && $request->booking_number == $request->input(\"box_name\".$j))\n                    {\n                        $box->box_name\t = $j.$request->booking_number;\n                    }\n                    else\n                    {\n                        $box->box_name\t = $request->input(\"box_name\".$j);\n\n                    }\n                    $box->box_dimension_id\t = $request->input(\"dimension\".$j);\n                    $box->other_length = $request->input(\"other_length\".$j);\n                    $box->other_width = $request->input(\"other_width\".$j);\n                    $box->other_height = $request->input(\"other_height\".$j);\n                    $box->other_select = $request->input(\"other_select\".$j);\n                    $box->weight = $request->input(\"weight\".$j);\n                    $box->volume = $request->input(\"volume\".$j);\n\n\n                    $box->rate = $request->input(\"rate\".$j);\n                    $box->packing = $request->input(\"packing\".$j);\n                    $box->box_packing_charge = $request->input(\"box_packing_charge\".$j);\n\n\n\n                    $box->unit_value = $request->input(\"unit_value\".$j);\n                    $box->total_value = $request->input(\"total_value\".$j);\n\n                        $box->sender_name = $request->input(\"sender_name\".$j);\n                        $box->sender_address = $request->input(\"sender_address\".$j);\n                        $box->sender_mob = $request->input(\"sender_mob\".$j);\n                        $box->sender_id_no = $request->input(\"sender_id_no\".$j);\n\n                        $box->receiver_name = $request->input(\"receiver_name\".$j);\n                        $box->receiver_address = $request->input(\"receiver_address\".$j);\n                        $box->receiver_mob = $request->input(\"receiver_mob\".$j);\n                        $box->receiver_id_no = $request->input(\"receiver_id_no\".$j);\n\n                        $box->sender_pin = $request->input(\"sender_pin\".$j);\n                        $box->receiver_pin = $request->input(\"receiver_pin\".$j);\n\n                        Log::info($request->file('sender_id_image'.$j));\n                        if ($request->file('sender_id_image'.$j)) {\n                            $fileName = auth()->id() . '_sender_' . time() . '.'. $request->file('sender_id_image'.$j)->extension();\n                            // $type = $request->document->getClientMimeType();\n                            // $size = $request->document->getSize();\n\n                            $request->file('sender_id_image'.$j)->move(public_path('uploads/customer_logo'), $fileName);\n                            $sender_fileName = 'uploads/customer_logo/'.$fileName;\n                            $box->sender_id_image = $sender_fileName;\n\n                        }\n                        else{\n                            $box->sender_id_image = $request->input(\"sender_id_image_value\".$j);\n                        }\n\n                        if ($request->file('receiver_id_image'.$j)) {\n\n                            $fileName = auth()->id() . '_reciver_' . time() . '.'. $request->file('receiver_id_image'.$j)->extension();\n                            // $type = $request->document->getClientMimeType();\n                            // $size = $request->document->getSize();\n\n                            $request->file('receiver_id_image'.$j)->move(public_path('uploads/customer_logo'), $fileName);\n                            $receiver_fileName = 'uploads/customer_logo/'.$fileName;\n                            $box->receiver_id_image = $receiver_fileName;\n\n                        }\n                        else{\n                            $box->receiver_id_image = $request->input(\"receiver_id_image_value\".$j);\n                        }\n\n                        $Box_sender = new Box_sender_reciver();\n                        $Box_sender->shipment_id = $shipments->id;\n                        $Box_sender->name = $request->input(\"sender_name\".$j);\n                        $Box_sender->address = $request->input(\"sender_address\".$j);\n                        $Box_sender->mobile = $request->input(\"sender_mob\".$j);\n                        $Box_sender->pin = $request->input(\"sender_pin\".$j);\n                        $box->sender_id_type = $request->input(\"sender_id_type\".$j);\n                        $Box_sender->id_no = $request->input(\"sender_id_no\".$j);\n                        isset($sender_fileName) ? $Box_sender->id_image = $sender_fileName: $Box_sender->id_image = $request->input(\"sender_id_image_value\".$j);\n                        $Box_sender->type = 1;\n                        $Box_sender->box_id = $request->input(\"box_name\".$j);\n                        $Box_sender->save();\n\n                        $Box_receiver = new Box_sender_reciver();\n                        $Box_receiver->shipment_id = $shipments->id;\n                        $Box_receiver->name = $request->input(\"receiver_name\".$j);\n                        $Box_receiver->address = $request->input(\"receiver_address\".$j);\n                        $Box_receiver->mobile = $request->input(\"receiver_mob\".$j);\n                        $Box_receiver->pin = $request->input(\"receiver_pin\".$j);\n                        $box->receiver_id_type = $request->input(\"receiver_id_type\".$j);\n                        $Box_receiver->id_no = $request->input(\"receiver_id_no\".$j);\n                        isset($receiver_fileName) ? $Box_receiver->id_image = $receiver_fileName:$Box_receiver->id_image = $request->input(\"receiver_id_image_value\".$j);\n                        $Box_receiver->type = 0;\n                        $Box_receiver->box_id = $request->input(\"box_name\".$j);\n                        $Box_receiver->save();\n\n                        // $box->sender_id_image = $request->input(\"sender_id_image\".$j);\n                        // $box->receiver_id_image = $request->input(\"receiver_id_image\".$j);\n\n                    $box->save();\n                }\n\n                $box_ids = Boxes::where('shipment_id',$shipments->id)->get()->pluck('id');\n\n                $p = 0;\n                foreach( $box_ids as  $key => $id ){\n                    $p = $p +1;\n                    if(!empty( $request->input(\"description\".$p) )) {\n                        for ($k = 0; $k <  count($request->input(\"description\".$p) ); $k++) {\n                            $package = new Packages();\n                            $package->shipment_id = $shipments->id;\n                            $package->branch_id = $shipments->branch_id;\n                            $package->box_id = $id;\n\n                            $package->description = $request->input(\"description\".$p)[$k];\n                            $package->quantity = $request->input(\"qty\".$p)[$k];\n                            $package->unit_price = $request->input(\"unit\".$p)[$k];\n                            $package->subtotal =$request->input(\"subtotal\".$p)[$k];\n                            if( !empty($request->input(\"description\".$p)[$k])){\n                                $package->save();\n                            }\n                        }\n                    }\n\n                }\n                \\DB::commit();\n                return \"Success saved as draft\";\n            } catch (\\Exception $e) {\n\n                \\DB::rollBack();\n                Log::error($e->getMessage());\n                toastr()->error($e->getMessage());\n                return $e->getMessage();\n            }\n\n        }\n\n    }\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param \\Illuminate\\Http\\Request $request\n     * @param int $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, $id)\n    {\n\n\n                try {\n                    \\DB::beginTransaction();\n                    $shipments = Shipments::findOrFail($id);\n\n                    $shipments->booking_number = $request->booking_number;\n                    // $shipments->agency_id = $request->agency_list;\n                    $shipments->sender_id = $request->sender_id;\n                    $shipments->receiver_id = $request->receiver_id;\n                    $shipments->receipt_number = $request->receipt_number;\n                    $shipments->packing_type = $request->packing_type;\n                    $shipments->agency_id = $request->agency_id;\n                    $request->shiping_method?$shipments->shiping_method = $request->shiping_method:'';\n                    $shipments->payment_method = $request->payment_method;\n                    $shipments->number_of_pcs = $request->number_of_pcs;\n                    $shipments->status_id = $request->status_id;\n                    $shipments->delivery_type = $request->delivery_type;\n                    $shipments->time = $request->time;\n                    $request->shipping_method_id?$shipments->shipping_method_id = $request->shipping_method_id:'';\n\n                    $shipments->collected_by = $request->collected_by;\n                    if($request->driver_id){\n                        $shipments->driver_id = $request->driver_id;\n                        $shipments->staff_id = null;\n\n                    } else {\n                        $shipments->staff_id = $request->staff_id;\n                        $shipments->driver_id = null;\n                    }\n                    $shipments->lrl_tracking_code = $request->lrl_tracking_code;\n                    $shipments->created_by = $request->user()->id;\n                    $shipments->shiping_date = date(\"Y-m-d\");\n                    // $shipments->branch_id = branch()->id;\n                    $shipments->branch_id = $request->branch_id;\n\n                    $shipments->created_date = $request->created_date;\n\n                    $shipments->barcode = $request->barcode;\n                    $shipments->prev_branch_id = $request->prev_branch_id;\n                    $shipments->created_by = $request->user()->id;\n                    $shipments->packing_charge = $request->packing_charge;\n                    $shipments->comment_box = $request->comment_box;\n\n\n                    $shipments->other_charges = $request->other_charges;\n                    $shipments->discount = $request->discount;\n                    $shipments->normal_weight = $request->normal_weight;\n\n                    $shipments->rate_normal_weight = $request->rate_normal_weight;\n                    $shipments->amount_normal_weight = $request->amount_normal_weight == 0?null:$request->amount_normal_weight;\n                    $shipments->electronics_weight = $request->electronics_weight;\n                    $shipments->rate_electronics_weight = $request->rate_electronics_weight;\n                    $shipments->amount_electronics_weight = $request->amount_electronics_weight == 0 ? null :$request->amount_electronics_weight;\n                    $shipments->rate_msic_weight = $request->rate_msic_weight;\n                    $shipments->amount_msic_weight = $request->amount_msic_weight == 0 ? null : $request->amount_msic_weight;\n                    $shipments->other_weight = $request->other_weight;\n                    $shipments->rate_other_weight = $request->rate_other_weight;\n                    $shipments->amount_other_weight = $request->amount_other_weight;\n                    $shipments->grand_total_weight = $request->grand_total_weight;\n                    $shipments->rate_grand_total = $request->rate_grand_total;\n                    $shipments->amount_grand_total = $request->amount_grand_total;\n\n\n                    $shipments->value_of_goods = $request->value_of_goods;\n                    $shipments->special_remarks = $request->special_remarks;\n\n\n                    $shipments->insurance = $request->insurance;\n                    $shipments->rate_insurance = $request->rate_insurance;\n                    $shipments->amount_insurance = $request->amount_insurance;\n                    $shipments->awbfee = $request->awbfee;\n                    $shipments->rate_awbfee = $request->rate_awbfee;\n                    $shipments->amount_awbfee = $request->amount_awbfee;\n                    $shipments->vat_amount = $request->vat_amount;\n                    $shipments->rate_vat_amount = $request->rate_vat_amount;\n                    $shipments->amount_vat_amount = $request->amount_vat_amount;\n                    $shipments->volume_weight = $request->volume_weight;\n                    $shipments->rate_volume_weight = $request->rate_volume_weight;\n                    $shipments->amount_volume_weight = $request->amount_volume_weight;\n                    $shipments->discount_weight = $request->discount_weight;\n                    $shipments->rate_discount_weight = $request->rate_discount_weight;\n                    $shipments->amount_discount_weight = $request->amount_discount_weight;\n\n                    $shipments->add_pack_charge = $request->add_pack_charge;\n                    $shipments->rate_add_pack_charge = $request->rate_add_pack_charge;\n                    $shipments->amount_add_pack_charge = $request->amount_add_pack_charge;\n\n\n                    $shipments->msic_weight = $request->msic_weight;\n                    $shipments->grand_total_box_value = $request->grand_total_box_value;\n                    $shipments->total_freight = $request->total_freight;\n                    $shipments->misc_freight = $request->misc_freight;\n                    $shipments->document_charge = $request->document_charge;\n                    $shipments->grand_total = $request->grand_total;\n                    $shipments->package_total_amount = $request->package_total_amount;\n                    $shipments->package_total_quantity = $request->package_total_quantity;\n\n                    $shipments->save();\n                    $status = Statuses::find($request->status_id);\n                    $shipments->status()->attach($status);\n\n                    Boxes::where('shipment_id', $shipments->id)->delete();\n                    Packages::where('shipment_id', $shipments->id)->delete();\n                    Box_sender_reciver::where('shipment_id', $shipments->id)->delete();\n\n                    for ($i = 0; $i < $request->number_of_pcs; $i++) {\n                        $j= $i+1;\n                        $box = new Boxes();\n                        $box->shipment_id = $shipments->id;\n                        if($request->number_of_pcs == 1){\n                            $box->box_name\t = $request->booking_number;\n                        }\n                        elseif($i == 0 && $request->booking_number == $request->input(\"box_name\".$j))\n                        {\n                            $box->box_name\t = $j.$request->booking_number;\n                        }\n                        else\n                        {\n                            $box->box_name\t = $request->input(\"box_name\".$j);\n\n                        }\n                        $box->box_dimension_id\t = $request->input(\"dimension\".$j);\n\n                        $box->other_length = $request->input(\"other_length\".$j);\n                        $box->other_width = $request->input(\"other_width\".$j);\n                        $box->other_height = $request->input(\"other_height\".$j);\n                        $box->other_select = $request->input(\"other_select\".$j);\n\n                        $box->weight = $request->input(\"weight\".$j);\n                        $box->volume = $request->input(\"volume\".$j);\n\n                        $box->rate = $request->input(\"rate\".$j);\n                        $box->packing = $request->input(\"packing\".$j);\n                        $box->box_packing_charge = $request->input(\"box_packing_charge\".$j);\n                        $box->unit_value = $request->input(\"unit_value\".$j);\n                        $box->total_value = $request->input(\"total_value\".$j);\n                        // $box->sender_id = $request->input(\"box_sender_id\".$j);\n                        // $box->receiver_id = $request->input(\"box_receiver_id\".$j);\n\n                        $box->sender_name = $request->input(\"sender_name\".$j);\n                        $box->sender_address = $request->input(\"sender_address\".$j);\n                        $box->sender_mob = $request->input(\"sender_mob\".$j);\n                        $box->sender_id_type = $request->input(\"sender_id_type\".$j);\n                        $box->sender_id_no = $request->input(\"sender_id_no\".$j);\n\n                        $box->receiver_name = $request->input(\"receiver_name\".$j);\n                        $box->receiver_address = $request->input(\"receiver_address\".$j);\n                        $box->receiver_mob = $request->input(\"receiver_mob\".$j);\n                        $box->receiver_id_type = $request->input(\"receiver_id_type\".$j);\n                        $box->receiver_id_no = $request->input(\"receiver_id_no\".$j);\n\n                        $box->sender_pin = $request->input(\"sender_pin\".$j);\n                        $box->receiver_pin = $request->input(\"receiver_pin\".$j);\n\n                        if ($request->file('sender_id_image'.$j)) {\n                            foreach ($request->file('sender_id_image'.$j) as $i=>$file) {\n                                $fileName = auth()->id() . '_sender_' . time().$i . '.'. $file->extension();\n                                // $type = $request->document->getClientMimeType();\n                                // $size = $request->document->getSize();\n\n                                $file->move(public_path('uploads/customer_logo'), $fileName);\n                                $sender_fileName = 'uploads/customer_logo/'.$fileName;\n                                $sender_id_image[] = $sender_fileName;\n                            }\n                            $box->sender_id_image =  json_encode($sender_id_image);\n                        }\n                        else{\n                            $box->sender_id_image = $request->input(\"sender_id_image_value\".$j);\n                        }\n\n                        if ($request->file('receiver_id_image'.$j)) {\n                            foreach ($request->file('receiver_id_image'.$j) as $i=>$file) {\n                                $fileName = auth()->id() . '_sender_' . time().$i . '.'. $file->extension();\n                                // $type = $request->document->getClientMimeType();\n                                // $size = $request->document->getSize();\n\n                                $file->move(public_path('uploads/customer_logo'), $fileName);\n                                $sender_fileName = 'uploads/customer_logo/'.$fileName;\n                                $receiver_id_image[] = $sender_fileName;\n                            }\n                            $box->receiver_id_image =  json_encode($receiver_id_image);\n                        }\n                        else{\n                            $box->receiver_id_image = $request->input(\"receiver_id_image_value\".$j);\n                            \n                        }\n\n\n\n\n\n\n\n                        $Box_sender = new Box_sender_reciver();\n                        $Box_sender->shipment_id = $shipments->id;\n                        $Box_sender->name = $request->input(\"sender_name\".$j);\n                        $Box_sender->address = $request->input(\"sender_address\".$j);\n                        $Box_sender->mobile = $request->input(\"sender_mob\".$j);\n                        $Box_sender->pin = $request->input(\"sender_pin\".$j);\n                        $box->sender_id_type = $request->input(\"sender_id_type\".$j);\n                        $Box_sender->id_no = $request->input(\"sender_id_no\".$j);\n                        isset($sender_fileName) ? $Box_sender->id_image = $sender_fileName: $Box_sender->id_image = $request->input(\"sender_id_image_value\".$j);\n                        $Box_sender->type = 1;\n                        $Box_sender->box_id = $request->input(\"box_name\".$j);\n                        $Box_sender->save();\n\n                        $Box_receiver = new Box_sender_reciver();\n                        $Box_receiver->shipment_id = $shipments->id;\n                        $Box_receiver->name = $request->input(\"receiver_name\".$j);\n                        $Box_receiver->address = $request->input(\"receiver_address\".$j);\n                        $Box_receiver->mobile = $request->input(\"receiver_mob\".$j);\n                        $Box_receiver->pin = $request->input(\"receiver_pin\".$j);\n                        $box->receiver_id_type = $request->input(\"receiver_id_type\".$j);\n                        $Box_receiver->id_no = $request->input(\"receiver_id_no\".$j);\n                        isset($receiver_fileName) ? $Box_receiver->id_image = $receiver_fileName:$Box_receiver->id_image = $request->input(\"receiver_id_image_value\".$j);\n                        $Box_receiver->type = 0;\n                        $Box_receiver->box_id = $request->input(\"box_name\".$j);\n                        $Box_receiver->save();\n                        // $box->sender_id_image = $request->input(\"sender_id_image\".$j);\n                        // $box->receiver_id_image = $request->input(\"receiver_id_image\".$j);\n\n                        $box->save();\n                    }\n\n                    $box_ids = Boxes::where('shipment_id',$shipments->id)->get()->pluck('id');\n                    $p = 0;\n                    foreach( $box_ids as  $key => $id ){\n                        $p = $p +1;\n                        if(!empty( $request->input(\"description\".$p) )) {\n                            for ($k = 0; $k <  count($request->input(\"description\".$p) ); $k++) {\n                                $package = new Packages();\n                                $package->shipment_id = $shipments->id;\n                                $package->branch_id = $shipments->branch_id;\n                                $package->box_id = $id;\n\n                                $package->description = $request->input(\"description\".$p)[$k];\n                                $package->quantity = $request->input(\"qty\".$p)[$k];\n                                $package->unit_price = $request->input(\"unit\".$p)[$k];\n                                $package->subtotal =$request->input(\"subtotal\".$p)[$k];\n                                if( !empty($request->input(\"description\".$p)[$k])){\n                                    $package->save();\n                                }\n                            }\n                        }\n\n                    }\n                    \\DB::commit();\n                } catch (\\Exception $e) {\n\n                    \\DB::rollBack();\n                    Log::error($e->getMessage());\n                    toastr()->error($e->getMessage());\n                    return redirect()->back();\n                }\n                toastr()->success(section_title() . ' Updated Successfully');\n                return redirect()->to(index_url());\n\n    }\n\n\n    public function createadditems($id)\n    {\n        $shipment = Shipments::with('driver')->findOrFail($id);\n        $bookingNum = $shipment->id+10000-1;\n        if($shipment->branch_id != branch()->id) {\n            toastr()->error(section_title() . 'No permission to view other branches');\n            return redirect()->to(index_url());\n        }\n        $box = Boxes::with('packages')->where('shipment_id', $id)->get();\n        $agencies = Agencies::all();\n        $origin_offices = Branches::all();\n        $countries = Countries::all();\n        $drivers = Drivers::whereActive(true)->get();\n        $dimensions = BoxDimensions::all();\n        $discount = Discount::first();\n        $weight = Weight::first();\n\n\n        return view('branches.shipments.createadditems', compact('shipment', 'bookingNum', 'box', 'agencies', 'origin_offices', 'countries','drivers','dimensions', 'discount','weight'));\n    }\n\n\n\n    public function additemsstore(Request $request)\n    {\n\n        // $request->validate([\n        //     'booking_number' => 'required|unique:shipments',\n        //     'status_id' => 'required',\n        // //     'sender_id' => 'required',\n        // //     'receiver_id' => 'required'\n        // ]);\n\n        try {\n            \\DB::beginTransaction();\n            $shipments = Shipments::findOrFail( $request->shipment_id );\n            $shipments->booking_number = $request->booking_number;\n            // $shipments->agency_id = $request->agency_list;\n            $shipments->sender_id = $request->sender_id;\n            $shipments->receiver_id = $request->receiver_id;\n            $shipments->receipt_number = $request->receipt_number;\n            $shipments->packing_type = $request->packing_type;\n            $shipments->agency_id = $request->agency_id;\n            $shipments->shiping_method = $request->shiping_method;\n\n\n            $shipments->payment_method = $request->payment_method;\n            $shipments->number_of_pcs = $request->number_of_pcs;\n            $shipments->status_id = $request->status_id;\n\n            $shipments->driver_id = $request->driver_id;\n            $shipments->lrl_tracking_code = $request->lrl_tracking_code;\n\n            $shipments->created_by = $request->user()->id;\n            $shipments->shiping_date = date(\"Y-m-d\");\n            $shipments->branch_id = $request->branch_id;\n\n\n\n            $shipments->barcode = $request->barcode;\n            $shipments->prev_branch_id = $request->prev_branch_id;\n            $shipments->created_by = $request->user()->id;\n            $shipments->packing_charge = $request->packing_charge;\n            $shipments->other_charges = $request->other_charges;\n            $shipments->discount = $request->discount;\n\n            $shipments->total_weight = $request->total_weight;\n            $shipments->msic_weight = $request->msic_weight;\n            $shipments->grand_total_box_value = $request->grand_total_box_value;\n            $shipments->total_freight = $request->total_freight;\n            $shipments->misc_freight = $request->misc_freight;\n            $shipments->document_charge = $request->document_charge;\n            $shipments->grand_total = $request->grand_total;\n            $shipments->package_total_amount = $request->package_total_amount;\n            $shipments->package_total_quantity = $request->package_total_quantity;\n\n\n            $shipments->save();\n            $status = Statuses::find($request->status_id);\n            $shipments->status()->attach($status);\n            for ($i = 0; $i < $request->number_of_pcs; $i++) {\n                $j= $i+1;\n                $box = new Boxes();\n                $box->shipment_id = $shipments->id;\n                $box->length = $request->input(\"length\".$j);\n                $box->width = $request->input(\"width\".$j);\n                $box->height = $request->input(\"height\".$j);\n                $box->weight = $request->input(\"weight\".$j);\n                $box->volume = $request->input(\"volume\".$j);\n                $box->unit_value = $request->input(\"unit_value\".$j);\n                $box->total_value = $request->input(\"total_value\".$j);\n\n\n                $box->sender_name = $request->input(\"sender_name\".$j);\n                        $box->sender_address = $request->input(\"sender_address\".$j);\n                        $box->sender_mob = $request->input(\"sender_mob\".$j);\n                        $box->sender_id_no = $request->input(\"sender_id_no\".$j);\n\n                        $box->receiver_name = $request->input(\"receiver_name\".$j);\n                        $box->receiver_address = $request->input(\"receiver_address\".$j);\n                        $box->receiver_mob = $request->input(\"receiver_mob\".$j);\n                        $box->receiver_id_no = $request->input(\"receiver_id_no\".$j);\n\n                        $box->sender_pin = $request->input(\"sender_pin\".$j);\n                        $box->receiver_pin = $request->input(\"receiver_pin\".$j);\n\n                        if ($request->file('sender_id_image'.$j)) {\n                            $fileName = auth()->id() . '_' . time() . '.'. $request->file('sender_id_image'.$j)->extension();\n                            // $type = $request->document->getClientMimeType();\n                            // $size = $request->document->getSize();\n\n                            $request->file('sender_id_image'.$j)->move(public_path('uploads/customer_logo'), $fileName);\n                            $fileName = 'uploads/customer_logo/'.$fileName;\n                            $box->sender_id_image = $fileName;\n\n                        }\n                        else{\n                            $box->sender_id_image = $request->input(\"sender_id_image_value\".$j);\n                        }\n\n                        if ($request->file('receiver_id_image'.$j)) {\n                            $fileName = auth()->id() . '_' . time() . '.'. $request->file('receiver_id_image'.$j)->extension();\n                            // $type = $request->document->getClientMimeType();\n                            // $size = $request->document->getSize();\n\n                            $request->file('receiver_id_image'.$j)->move(public_path('uploads/customer_logo'), $fileName);\n                            $fileName = 'uploads/customer_logo/'.$fileName;\n                            $box->receiver_id_image = $fileName;\n\n                        }\n                        else{\n                            $box->receiver_id_image = $request->input(\"receiver_id_image_value\".$j);\n                        }\n\n\n                        // $box->sender_id_image = $request->input(\"sender_id_image\".$j);\n                        // $box->receiver_id_image = $request->input(\"receiver_id_image\".$j);\n\n                $box->sender_id = $request->input('box_sender_id'.$j);\n                $box->receiver_id = $request->input('box_receiver_id'.$j);\n\n                $box->save();\n            }\n\n            $box_ids = Boxes::where('shipment_id',$shipments->id)->get()->pluck('id');\n\n            $p = 0;\n            foreach( $box_ids as  $key => $id ){\n                $p = $p +1;\n                if(!empty( $request->input(\"description\".$p) )) {\n                    for ($k = 0; $k <  count($request->input(\"description\".$p) ); $k++) {\n                        $package = new Packages();\n                        $package->shipment_id = $shipments->id;\n                        $package->branch_id = $shipments->branch_id;\n                        $package->box_id = $id;\n\n                        $package->description = $request->input(\"description\".$p)[$k];\n                        $package->quantity = $request->input(\"qty\".$p)[$k];\n                        $package->unit_price = $request->input(\"unit\".$p)[$k];\n                        $package->subtotal =$request->input(\"subtotal\".$p)[$k];\n                        if( !empty($request->input(\"description\".$p)[$k])  &&  !empty($request->input(\"qty\".$p)[$k]) && !empty( $request->input(\"unit\".$p)[$k])){\n                            $package->save();\n                        }\n                    }\n                }\n\n            }\n\n\n            if ($shipments->receiver) {\n                $message_receiver = \"Dear \" . $shipments->receiver->name . \",\n            Thank you for choosing Best Express Cargo!\n            Your shipment SD# $shipments->booking_number has been booked!. Please share your valuable feedback\n             Weblink:https://bestexpresscargo.com/\";\n              $phone = !empty($shipments->receiver->whatsapp_number) ? $shipments->receiver->country_code_whatsapp.$shipments->receiver->whatsapp_number :$shipments->receiver->country_code.$shipments->receiver->phone;\n                send_message($phone, $message_receiver);\n\n            }\n\n            if ($shipments->sender) {\n                $message_sender = \"Dear \" . $shipments->sender->name . \",\n            Thank you for choosing Best Express Cargo!\n            Your shipment SD# $shipments->booking_number has been booked!. Please share your valuable feedback\n             Weblink: https://bestexpresscargo.com/\";\n              $phone = !empty($shipments->sender->whatsapp_number) ? $shipments->sender->country_code_whatsapp.$shipments->sender->whatsapp_number :$shipments->sender->country_code.$shipments->sender->phone;\n                send_message($phone, $message_sender);\n\n            }\n\n            \\DB::commit();\n        } catch (\\Exception $e) {\n\n            \\DB::rollBack();\n            Log::error($e->getMessage());\n            toastr()->error($e->getMessage());\n            return redirect()->back();\n        }\n        toastr()->success(section_title() . ' Added Successfully');\n        return redirect()->to(index_url());\n    }\n\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param int $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy($id)\n    {\n        //\n    }\n\n    public function print($id){\n\n        $shipment = Shipments::with('boxes')->with('packages')->with('agency')->with('receiver')->with('sender')->findOrFail($id);\n        return view('branches.shipments.printview', compact('shipment'));\n    }\n\n    public function single_print($id){\n        $item = Boxes::with('packages')->with('shipment')->with('receiver')->with('sender')->findOrFail($id);\n        return view('branches.shipments.single_CoustomsPrint', compact('item'));\n    }\n\n    public function exportImage(Request $request)\n    {\n        $imageData = $request->input('imageData');\n\n        // Extract base64 image data\n        list($type, $data) = explode(';', $imageData);\n        list(, $data)      = explode(',', $data);\n        $imageData = base64_decode($data);\n\n        // Generate unique filename\n        $filename = 'exported_image_' . time() . '.png';\n\n        // Save image on server\n        file_put_contents(public_path('images/' . $filename), $imageData);\n\n        return response()->json(['filename' => $filename]);\n    }\n\n    public function printCustomer($id){\n        $shipment = Shipments::with('boxes')->with('packages')->with('agency')->with('receiver')->with('sender')->findOrFail($id);\n        return view('branches.shipments.printCustomerview', compact('shipment'));\n    }\n\n\n    public function printall(Request $request){\n            $shipments = Boxes::with('packages')->whereIn('id', $request->booking_ids)->get();\n            $agency = Agencies::find($request->agency);\n            $awb_no = $request->input('awb_no');\n            return view('branches.shipments.printviewall', compact('shipments','agency','awb_no'));\n    }\n\n    public function loadingExport(Request $request) {\n        if(!empty($request->boxId)) {\n            $explode_id = explode(',', $request->boxId);\n            // $datas = ShipsBookings::with('shipment','ship','shipment.boxes','shipment.bookingNumberStatus.status')->whereIn('booking_id', $explode_id)->get();\n            $datas =  Boxes::with('shipment.shipmentStatus','shipment.packages','boxStatuses.status')->whereHas('shipment',function ($query) {\n                $query->where('branch_id', branch()->id);\n            })->where('is_transfer',0)->whereIn('id',$explode_id)->get();\n\n        } else {\n            $request->shipIds;\n            $datas =  Boxes::with('shipment.shipmentStatus','shipment.packages','shipment.shipType','boxStatuses.status')->whereHas('shipment',function ($query) {\n                $query->where('branch_id', branch()->id);\n            })->where('is_transfer',0)->where('is_shipment',1)->where('ship_id',$request->shipIds)->get();\n\n            // $datas = ShipsBookings::with('shipment','ship','shipment.boxes','shipment.bookingNumberStatus.status')->where('ship_id', $request->shipIds)->get();\n        }\n        foreach($datas as $data) {\n            $shipId = $data->ship_id;\n        }\n        $mode = Ships::with('shipmentMethodTypes')->find($shipId);\n        $excelName = \"loadinglist.xlsx\";\n        return view('branches.shipments.loadingExportList', compact('datas','excelName','mode'));\n    }\n\n    public function collectedBy(Request $request){\n        $html='';\n        if($request->collected ==\"driver\") {\n            $data = Drivers::select( 'id','name')->whereActive(true)->where('branch_id',branch()->id)->orderBy('name')->get(); // Drivers::all();\n            $html = \"<div class='form-group'><label>Driver Name</label>\n                        <select name='driver_id'  class='form-control' >\";\n            foreach( $data as $val ){\n                $html.=\"<option value='\".$val->id.\"'>\".strtoupper($val->name).\" </option>\";\n            }\n            $html.=\"</select>\";\n\n        }else {\n\n            $data = Staffs::notadmin()->where('branch_id',branch()->id)->orderBy('full_name')->get();\n            $html = \"<div class='form-group'><label>Staff Name</label>\n                        <select name='staff_id'  class='form-control' >\";\n            foreach( $data as $val ){\n                $html.=\"<option value='\".$val->id.\"'>\".strtoupper($val->full_name).\" </option>\";\n            }\n            $html.=\"</select></div>\";\n        }\n\n        $datas['res'] =  $html;\n        return response()->json($datas);\n    }\n\n    public function booking_code(Request $request){\n        $html='';\n        $code = $request->booking_code;\n        $customer_details = Customers::with('address')->where('booking_ref_id', $code )->first();\n\n        return $customer_details->id;\n\n\n    }\n    public function update_sender(Request $request, $id)\n    {\n        // Find the sender by ID\n        $sender = Customers::find($id);\n        $cityName = $request->input('cities');\n        if ($sender) {\n            // Update sender's basic info\n            $sender->name = $request->input('name');\n            $sender->email = $request->input('email');\n            $sender->phone = $request->input('phone');\n            $sender->identification_number = $request->input('client_identification_number');\n            $sender->identification_type = $request->input('client_identification_type');\n            $sender->whatsapp_number = $request->input('whatsapp_number');\n            $sender->country_code_whatsapp = $request->input('country_code_whatsapp');\n            $sender->country_code_phone = $request->input('country_code_phone');\n            if ($request->hasFile('document')) {\n                $fileNames = [];\n                foreach ($request->file('document') as $file) {\n                    $fileName = auth()->id() . '_' . time() . '_' . $file->getClientOriginalName();\n                    $file->move(public_path('uploads/customer_logo'), $fileName);\n                    $fileNames[] = 'uploads/customer_logo/' . $fileName;\n                }\n            \n                // Join the file names into a comma-separated string\n                $sender->logo = implode(',', $fileNames);\n               // $customer->save();\n            }\n            \n            // Save the sender information\n            $sender->save();\n            $city = Cities::where('name', $cityName)->first();\n            if (!$city) {\n                // If not, create a new city\n                $city = new Cities();\n                $city->name = $cityName;\n                $city->state_id = $request->input('state_id'); // Link to the selected state\n                $city->country_id = $request->input('country_id');\n                $city->save();\n            }\n    // Get the city ID (whether existing or newly created)\n        $cityId = $city->id;\n            // Update sender's address (if address exists)\n            if ($sender->address) {\n                $sender->address->address = $request->input('address');\n                $sender->address->country_id = $request->input('country_id');\n                $sender->address->state_id = $request->input('state_id');\n                $sender->address->district_id = $request->input('district_id');\n                $sender->address->city_id =$cityId;\n                $sender->address->zip_code = $request->input('zip_code');\n                $sender->address->save();\n            } else {\n                // Optionally handle if the sender doesn't have an address\n                // You could create a new address here if necessary\n            }\n          //  $cityName = $request->input('city_id');\n\n   \n            return response()->json([\n                'success' => true,\n                'data' => [\n                    'name' => $sender->name,\n                    \n                    'phone' => $sender->phone,\n                    'address' => $sender->address->address ?? '', // Ensure it's a string\n                    \n                ],\n            ]);\n        }\n    \n        return response()->json(['success' => false, 'message' => 'Sender not found.']);\n    }\n    public function update_receiver(Request $request, $id)\n    {\n        // Find the sender by ID\n        $receiver = Customers::find($id);\n        $cityName = $request->input('cities');\n        if ($receiver) {\n            // Update sender's basic info\n            $receiver->name = $request->input('name');\n            $receiver->email = $request->input('email');\n            $receiver->phone = $request->input('phone');\n            $receiver->identification_number = $request->input('client_identification_number');\n            $receiver->identification_type = $request->input('client_identification_type');\n            $receiver->whatsapp_number = $request->input('whatsapp_number');\n            $receiver->country_code_whatsapp = $request->input('country_code_whatsapp');\n            $receiver->country_code_phone = $request->input('country_code_phone');\n            if ($request->hasFile('document')) {\n                $fileNames = [];\n                foreach ($request->file('document') as $file) {\n                    $fileName = auth()->id() . '_' . time() . '_' . $file->getClientOriginalName();\n                    $file->move(public_path('uploads/customer_logo'), $fileName);\n                    $fileNames[] = 'uploads/customer_logo/' . $fileName;\n                }\n            \n                // Join the file names into a comma-separated string\n                $receiver->logo = implode(',', $fileNames);\n               // $customer->save();\n            }\n            \n            // Save the sender information\n            $receiver->save();\n\n            $city = Cities::where('name', $cityName)->first();\n            if (!$city) {\n                // If not, create a new city\n                $city = new Cities();\n                $city->name = $cityName;\n                $city->state_id = $request->input('state_id'); // Link to the selected state\n                $city->country_id = $request->input('country_id');\n                $city->save();\n            }\n    // Get the city ID (whether existing or newly created)\n        $cityId = $city->id;\n    \n            // Update sender's address (if address exists)\n            if ($receiver->address) {\n                $receiver->address->address = $request->input('address');\n                $receiver->address->country_id = $request->input('country_id');\n                $receiver->address->state_id = $request->input('state_id');\n                $receiver->address->district_id = $request->input('district_id');\n                $receiver->address->city_id = $cityId;\n                $receiver->address->zip_code = $request->input('zip_code');\n                $receiver->address->save();\n            } else {\n                // Optionally handle if the sender doesn't have an address\n                // You could create a new address here if necessary\n            }\n            // Check if the city already exists\n          \n            return response()->json([\n                'success' => true,\n                'data' => [\n                    'name' => $receiver->name,\n                    \n                    'phone' => $receiver->phone,\n                    'address' => $receiver->address->address ?? '', // Ensure it's a string\n                    \n                ],\n            ]);\n        }\n    \n        return response()->json(['success' => false, 'message' => 'Receiver not found.']);\n    }\n\n\n\n    public function reportList(Request $request) {\n        $statuses =  Statuses::where('status',1)->where('view',1)->orWhere('view',2)->get();//status_list_admin();//\n        // $query = ShipsBookings::with('shipment','shipment.shipmentStatus','shipment.bookingNumberStatus','shipment.boxes','shipment.boxes.boxStatuses','shipment.boxes.boxStatuses.status','shipment.branch','ship','ship.createdBy','ship.portOfOrigins','ship.shipmentTypes','ship.clearingAgents');\n        $query = Boxes::with('shipment.driver','shipment.boxes','shipment.shipmentStatus','shipment.sender','shipment.receiver.address','shipment.receiver.address.state','boxStatuses.status','shipment.boxes.boxStatuses','shipment.boxes.boxStatuses.status','shipment.agency','shipment.branch')->where('is_shipment',1);\n        $shipsss = $query->orderBy('id', 'desc')->get();\n        $ships = collect();\n        foreach ($shipsss as $shippp) {\n            if ($shippp->shipment && $shippp->shipment->branch_id == auth()->user()->staff->branch_id) {\n                Log::info($shippp->shipment->branch_id . '-----' . auth()->user()->staff->branch_id);\n                $ships->push($shippp);\n            }\n        }\n        $datas = [];\n        foreach($ships as  $key => $ship) {\n            $getShip = Ships::with('createdBy')->where('id',$ship->ship_id)->first();\n            $datas[$key]['createdDate'] = (!empty($getShip->created_date) ) ? date('d-m-Y',strtotime($getShip->created_date)) : '';\n            $datas[$key]['portOfOrigins'] = (!empty($getShip->portOfOrigins) ) ? $getShip->portOfOrigins->name : '';\n            $datas[$key]['clearingAgents'] = (!empty($getShip->clearingAgents) ) ? $getShip->clearingAgents->name : '';\n            $datas[$key]['shipmentTypes'] = (!empty($getShip->shipmentMethodTypes) ) ? $getShip->shipmentMethodTypes->name : '';\n            $datas[$key]['awb_number'] = (!empty($getShip->awb_number) ) ? $getShip->awb_number : '';\n            $datas[$key]['createdBy'] = (!empty($getShip->awb_number) ) ? $getShip->awb_number : '';\n            $datas[$key]['boxes'] = (!empty($ship->box_name) ) ? $ship->box_name : '';\n\n            if(!empty($ship->boxStatuses)) {\n                // dd(collect($ship->shipment->shipmentStatus)->where('statuses_id', 15)->last());\n                if($ship->shipment ){\n                    $collectedType = collect($ship->shipment->shipmentStatus)->where('statuses_id', 15)->last();\n                }\n                $receivedType = collect($ship->boxStatuses)->where('status_id', 1)->last();\n                $bookedType = collect($ship->boxStatuses)->where('status_id', 2)->last();\n                $forwardedType = collect($ship->boxStatuses)->where('status_id', 3)->last();\n                $arrivedType = collect($ship->boxStatuses)->where('status_id', 4)->last();\n                $waitingType = collect($ship->boxStatuses)->where('status_id', 5)->last();\n                $onHoldType = collect($ship->boxStatuses)->where('status_id', 7)->last();\n                $clearedType = collect($ship->boxStatuses)->where('status_id', 8)->last();\n                $arrangedType = collect($ship->boxStatuses)->where('status_id', 9)->last();\n                $outType = collect($ship->boxStatuses)->where('status_id', 10)->last();\n                $deliveredType = collect($ship->boxStatuses)->where('status_id', 11)->last();\n                $notDeliveredType = collect($ship->boxStatuses)->where('status_id', 12)->last();\n                $pendingType = collect($ship->boxStatuses)->where('status_id', 13)->last();\n                $moreTrackingType = collect($ship->boxStatuses)->where('status_id', 14)->last();\n                $transferType = collect($ship->boxStatuses)->where('status_id', 17)->last();\n                $receivedType = collect($ship->boxStatuses)->where('status_id', 24)->last();\n                $holdType = collect($ship->boxStatuses)->where('status_id', 26)->last();\n                $shortType = collect($ship->boxStatuses)->where('status_id', 27)->last();\n\n                $datas[$key]['collectedDate'] = (!empty($collectedType)) ? date('d-m-Y',strtotime($collectedType->created_at)) : '' ;\n                $datas[$key]['receivedDate'] = (!empty($receivedType)) ? date('d-m-Y',strtotime($receivedType->created_at)) : '' ;\n                $datas[$key]['bookedDate'] = (!empty($bookedType)) ? date('d-m-Y',strtotime($bookedType->created_at)) : '' ;\n                $datas[$key]['forwardedDate'] = (!empty($forwardedType)) ? date('d-m-Y',strtotime($forwardedType->created_at)) : '' ;\n                $datas[$key]['arrivedDate'] = (!empty($arrivedType)) ? date('d-m-Y',strtotime($arrivedType->created_at)) : '' ;\n                $datas[$key]['waitingDate'] = (!empty($waitingType)) ?  date('d-m-Y',strtotime($waitingType->created_at)) : '' ;\n                $datas[$key]['onHoldDate'] = (!empty($onHoldType)) ?  date('d-m-Y',strtotime($onHoldType->created_at)) : '' ;\n                $datas[$key]['clearedDate'] = (!empty($clearedType)) ? date('d-m-Y',strtotime($clearedType->created_at)) : '' ;\n                $datas[$key]['arrangedDate'] = (!empty($arrangedType)) ?  date('d-m-Y',strtotime($arrangedType->created_at)) : '' ;\n                $datas[$key]['outDate'] = (!empty($outType)) ?  date('d-m-Y',strtotime($outType->created_at)) : '' ;\n                $datas[$key]['deliveredDate'] = (!empty($deliveredType)) ?  date('d-m-Y',strtotime($deliveredType->created_at)) : '' ;\n                $datas[$key]['notDeliveredDate'] = (!empty($notDeliveredType)) ?  date('d-m-Y',strtotime($notDeliveredType->created_at)) : '' ;\n                $datas[$key]['pendingDate'] = (!empty($pendingType)) ?  date('d-m-Y',strtotime($pendingType->created_at)) : '' ;\n                $datas[$key]['moreTrackingDate'] = (!empty($moreTrackingType)) ?  date('d-m-Y',strtotime($moreTrackingType->created_at)) : '' ;\n                $datas[$key]['transferDate'] = (!empty($transferType)) ?  date('d-m-Y',strtotime($transferType->created_at)) : '' ;\n                $datas[$key]['receivedDate'] = (!empty($receivedType)) ?  date('d-m-Y',strtotime($receivedType->created_at)) : '' ;\n                $datas[$key]['holdDate'] = (!empty($holdType)) ?  date('d-m-Y',strtotime($holdType->created_at)) : '' ;\n                $datas[$key]['shortDate'] = (!empty($shortType)) ?  date('d-m-Y',strtotime($shortType->created_at)) : '' ;\n\n                $status = collect($ship->boxStatuses)->last();\n                if($ship->shipment){\n                    $shipmentStatus = collect($ship->shipment->shipmentStatus)->last();\n                }\n                $datas[$key]['lastStatus'] = (!empty($status)) ? $status->status->name : $shipmentStatus->status->name ;\n\n                if($datas[$key]['lastStatus'] == \"Shipment on hold\") {\n                    $datas[$key]['style'] = 'background-color:#ffdb00;';\n                } else if($datas[$key]['lastStatus'] == \"Pending\") {\n                    $datas[$key]['style'] = 'background-color:#ec1616e6;';\n                } else {\n                    $datas[$key]['style'] = 'background-color:none;';\n                }\n                if($ship->shipment){\n                    $datas[$key]['booking_number'] = $ship->shipment->booking_number;\n                }\n                else{\n                    $datas[$key]['booking_number'] = 'null';\n                }\n                $datas[$key]['shipment_id'] = $getShip->shipment_id;\n                $datas[$key]['full_name'] = $getShip->createdBy->full_name??'';\n                $datas[$key]['view'] = '<a href=\"javascript:void(0)\" class=\"edit btn btn-secondary btn-sm detailedView\">View</a>';\n            }\n        }\n        return view('branches.shipments.reportList',compact('statuses','datas'));\n    }\n\n    public function viewDataReport($fromDate,$toDate) {\n        $query = Boxes::with('shipment.driver','shipment.boxes','shipment.shipmentStatus','shipment.sender','shipment.receiver.address','shipment.receiver.address.state','boxStatuses.status','shipment.boxes.boxStatuses','shipment.boxes.boxStatuses.status','shipment.agency','shipment.branch')->where('is_shipment',1);\n        $ships = $query->whereHas('boxStatuses', function ($q) use ($fromDate,$toDate) {\n                        $q->whereBetween('boxes_statuses.created_at',[$fromDate, $toDate]);\n                    })->orderBy('id','desc')->get();\n\n        $datas = [];\n        foreach($ships as  $key => $ship) {\n            $getShip = Ships::with('createdBy')->where('id',$ship->ship_id)->first();\n            $datas[$key]['createdDate'] = (!empty($getShip->created_date) ) ? date('d-m-Y',strtotime($getShip->created_date)) : '';\n            $datas[$key]['portOfOrigins'] = (!empty($getShip->portOfOrigins) ) ? $getShip->portOfOrigins->name : '';\n            $datas[$key]['clearingAgents'] = (!empty($getShip->clearingAgents) ) ? $getShip->clearingAgents->name : '';\n            $datas[$key]['shipmentTypes'] = (!empty($getShip->shipmentMethodTypes) ) ? $getShip->shipmentMethodTypes->name : '';\n            $datas[$key]['awb_number'] = (!empty($getShip->awb_number) ) ? $getShip->awb_number : '';\n            $datas[$key]['createdBy'] = (!empty($getShip->awb_number) ) ? $getShip->awb_number : '';\n            $datas[$key]['boxes'] = (!empty($ship->box_name) ) ? $ship->box_name : '';\n\n            if(!empty($ship->boxStatuses)) {\n                $collectedType = collect($ship->shipment->shipmentStatus)->where('statuses_id', 15)->last();\n                $receivedType = collect($ship->boxStatuses)->where('status_id', 1)->last();\n                $bookedType = collect($ship->boxStatuses)->where('status_id', 2)->last();\n                $forwardedType = collect($ship->boxStatuses)->where('status_id', 3)->last();\n                $arrivedType = collect($ship->boxStatuses)->where('status_id', 4)->last();\n                $waitingType = collect($ship->boxStatuses)->where('status_id', 5)->last();\n                $onHoldType = collect($ship->boxStatuses)->where('status_id', 7)->last();\n                $clearedType = collect($ship->boxStatuses)->where('status_id', 8)->last();\n                $arrangedType = collect($ship->boxStatuses)->where('status_id', 9)->last();\n                $outType = collect($ship->boxStatuses)->where('status_id', 10)->last();\n                $deliveredType = collect($ship->boxStatuses)->where('status_id', 11)->last();\n                $notDeliveredType = collect($ship->boxStatuses)->where('status_id', 12)->last();\n                $pendingType = collect($ship->boxStatuses)->where('status_id', 13)->last();\n                $moreTrackingType = collect($ship->boxStatuses)->where('status_id', 14)->last();\n                $transferType = collect($ship->boxStatuses)->where('status_id', 17)->last();\n                $receivedType = collect($ship->boxStatuses)->where('status_id', 24)->last();\n                $holdType = collect($ship->boxStatuses)->where('status_id', 26)->last();\n                $shortType = collect($ship->boxStatuses)->where('status_id', 27)->last();\n\n                $datas[$key]['collectedDate'] = (!empty($collectedType)) ? date('d-m-Y',strtotime($collectedType->created_at)) : '' ;\n                $datas[$key]['receivedDate'] = (!empty($receivedType)) ? date('d-m-Y',strtotime($receivedType->created_at)) : '' ;\n                $datas[$key]['bookedDate'] = (!empty($bookedType)) ? date('d-m-Y',strtotime($bookedType->created_at)) : '' ;\n                $datas[$key]['forwardedDate'] = (!empty($forwardedType)) ? date('d-m-Y',strtotime($forwardedType->created_at)) : '' ;\n                $datas[$key]['arrivedDate'] = (!empty($arrivedType)) ? date('d-m-Y',strtotime($arrivedType->created_at)) : '' ;\n                $datas[$key]['waitingDate'] = (!empty($waitingType)) ?  date('d-m-Y',strtotime($waitingType->created_at)) : '' ;\n                $datas[$key]['onHoldDate'] = (!empty($onHoldType)) ?  date('d-m-Y',strtotime($onHoldType->created_at)) : '' ;\n                $datas[$key]['clearedDate'] = (!empty($clearedType)) ? date('d-m-Y',strtotime($clearedType->created_at)) : '' ;\n                $datas[$key]['arrangedDate'] = (!empty($arrangedType)) ?  date('d-m-Y',strtotime($arrangedType->created_at)) : '' ;\n                $datas[$key]['outDate'] = (!empty($outType)) ?  date('d-m-Y',strtotime($outType->created_at)) : '' ;\n                $datas[$key]['deliveredDate'] = (!empty($deliveredType)) ?  date('d-m-Y',strtotime($deliveredType->created_at)) : '' ;\n                $datas[$key]['notDeliveredDate'] = (!empty($notDeliveredType)) ?  date('d-m-Y',strtotime($notDeliveredType->created_at)) : '' ;\n                $datas[$key]['pendingDate'] = (!empty($pendingType)) ?  date('d-m-Y',strtotime($pendingType->created_at)) : '' ;\n                $datas[$key]['moreTrackingDate'] = (!empty($moreTrackingType)) ?  date('d-m-Y',strtotime($moreTrackingType->created_at)) : '' ;\n                $datas[$key]['transferDate'] = (!empty($transferType)) ?  date('d-m-Y',strtotime($transferType->created_at)) : '' ;\n                $datas[$key]['receivedDate'] = (!empty($receivedType)) ?  date('d-m-Y',strtotime($receivedType->created_at)) : '' ;\n                $datas[$key]['holdDate'] = (!empty($holdType)) ?  date('d-m-Y',strtotime($holdType->created_at)) : '' ;\n                $datas[$key]['shortDate'] = (!empty($shortType)) ?  date('d-m-Y',strtotime($shortType->created_at)) : '' ;\n\n                $status = collect($ship->boxStatuses)->last();\n                $shipmentStatus = collect($ship->shipment->shipmentStatus)->last();\n                $datas[$key]['lastStatus'] = (!empty($status)) ? $status->status->name : $shipmentStatus->status->name ;\n\n                if($datas[$key]['lastStatus'] == \"Shipment on hold\") {\n                    $datas[$key]['style'] = 'background-color:#ffdb00;';\n                } else if($datas[$key]['lastStatus'] == \"Pending\") {\n                    $datas[$key]['style'] = 'background-color:#ec1616e6;';\n                } else {\n                    $datas[$key]['style'] = 'background-color:none;';\n                }\n                $datas[$key]['booking_number'] = $ship->shipment->booking_number;\n                $datas[$key]['shipment_id'] = $getShip->shipment_id;\n                $datas[$key]['full_name'] = $getShip->createdBy->full_name;\n                $datas[$key]['view'] = '<a href=\"javascript:void(0)\" class=\"edit btn btn-secondary btn-sm detailedView\">View</a>';\n            }\n        }\n        return response()->json($datas);\n    }\n\n    public function viewStatusDataReport($status) {\n        $query = Boxes::with('shipment.driver','shipment.boxes','shipment.shipmentStatus','shipment.sender','shipment.receiver.address','shipment.receiver.address.state','boxStatuses.status','shipment.boxes.boxStatuses','shipment.boxes.boxStatuses.status','shipment.agency','shipment.branch')->where('is_shipment',1);\n        if($status == 15) {\n            $ships = $query->orderBy('id','desc')->get();\n        } else {\n            $ships = $query->whereHas('boxStatuses', function ($q) use ($status) {\n                $q->where('boxes_statuses.status_id',$status);\n            })->orderBy('id','desc')->get();\n        }\n        $datas = [];\n            foreach($ships as  $key => $ship) {\n                $getShip = Ships::with('createdBy')->where('id',$ship->ship_id)->first();\n                $datas[$key]['createdDate'] = (!empty($getShip->created_date) ) ? date('d-m-Y',strtotime($getShip->created_date)) : '';\n                $datas[$key]['portOfOrigins'] = (!empty($getShip->portOfOrigins) ) ? $getShip->portOfOrigins->name : '';\n                $datas[$key]['clearingAgents'] = (!empty($getShip->clearingAgents) ) ? $getShip->clearingAgents->name : '';\n                $datas[$key]['shipmentTypes'] = (!empty($getShip->shipmentMethodTypes) ) ? $getShip->shipmentMethodTypes->name : '';\n                $datas[$key]['awb_number'] = (!empty($getShip->awb_number) ) ? $getShip->awb_number : '';\n                $datas[$key]['createdBy'] = (!empty($getShip->awb_number) ) ? $getShip->awb_number : '';\n                $datas[$key]['boxes'] = (!empty($ship->box_name) ) ? $ship->box_name : '';\n\n                if(!empty($ship->boxStatuses)) {\n                    $collectedType = collect($ship->shipment->shipmentStatus)->where('statuses_id', 15)->last();\n                    $receivedType = collect($ship->boxStatuses)->where('status_id', 1)->last();\n                    $bookedType = collect($ship->boxStatuses)->where('status_id', 2)->last();\n                    $forwardedType = collect($ship->boxStatuses)->where('status_id', 3)->last();\n                    $arrivedType = collect($ship->boxStatuses)->where('status_id', 4)->last();\n                    $waitingType = collect($ship->boxStatuses)->where('status_id', 5)->last();\n                    $onHoldType = collect($ship->boxStatuses)->where('status_id', 7)->last();\n                    $clearedType = collect($ship->boxStatuses)->where('status_id', 8)->last();\n                    $arrangedType = collect($ship->boxStatuses)->where('status_id', 9)->last();\n                    $outType = collect($ship->boxStatuses)->where('status_id', 10)->last();\n                    $deliveredType = collect($ship->boxStatuses)->where('status_id', 11)->last();\n                    $notDeliveredType = collect($ship->boxStatuses)->where('status_id', 12)->last();\n                    $pendingType = collect($ship->boxStatuses)->where('status_id', 13)->last();\n                    $moreTrackingType = collect($ship->boxStatuses)->where('status_id', 14)->last();\n                    $transferType = collect($ship->boxStatuses)->where('status_id', 17)->last();\n                    $receivedType = collect($ship->boxStatuses)->where('status_id', 24)->last();\n                    $holdType = collect($ship->boxStatuses)->where('status_id', 26)->last();\n                    $shortType = collect($ship->boxStatuses)->where('status_id', 27)->last();\n\n                    $datas[$key]['collectedDate'] = (!empty($collectedType)) ? date('d-m-Y',strtotime($collectedType->created_at)) : '' ;\n                    $datas[$key]['receivedDate'] = (!empty($receivedType)) ? date('d-m-Y',strtotime($receivedType->created_at)) : '' ;\n                    $datas[$key]['bookedDate'] = (!empty($bookedType)) ? date('d-m-Y',strtotime($bookedType->created_at)) : '' ;\n                    $datas[$key]['forwardedDate'] = (!empty($forwardedType)) ? date('d-m-Y',strtotime($forwardedType->created_at)) : '' ;\n                    $datas[$key]['arrivedDate'] = (!empty($arrivedType)) ? date('d-m-Y',strtotime($arrivedType->created_at)) : '' ;\n                    $datas[$key]['waitingDate'] = (!empty($waitingType)) ?  date('d-m-Y',strtotime($waitingType->created_at)) : '' ;\n                    $datas[$key]['onHoldDate'] = (!empty($onHoldType)) ?  date('d-m-Y',strtotime($onHoldType->created_at)) : '' ;\n                    $datas[$key]['clearedDate'] = (!empty($clearedType)) ? date('d-m-Y',strtotime($clearedType->created_at)) : '' ;\n                    $datas[$key]['arrangedDate'] = (!empty($arrangedType)) ?  date('d-m-Y',strtotime($arrangedType->created_at)) : '' ;\n                    $datas[$key]['outDate'] = (!empty($outType)) ?  date('d-m-Y',strtotime($outType->created_at)) : '' ;\n                    $datas[$key]['deliveredDate'] = (!empty($deliveredType)) ?  date('d-m-Y',strtotime($deliveredType->created_at)) : '' ;\n                    $datas[$key]['notDeliveredDate'] = (!empty($notDeliveredType)) ?  date('d-m-Y',strtotime($notDeliveredType->created_at)) : '' ;\n                    $datas[$key]['pendingDate'] = (!empty($pendingType)) ?  date('d-m-Y',strtotime($pendingType->created_at)) : '' ;\n                    $datas[$key]['moreTrackingDate'] = (!empty($moreTrackingType)) ?  date('d-m-Y',strtotime($moreTrackingType->created_at)) : '' ;\n                    $datas[$key]['transferDate'] = (!empty($transferType)) ?  date('d-m-Y',strtotime($transferType->created_at)) : '' ;\n                    $datas[$key]['receivedDate'] = (!empty($receivedType)) ?  date('d-m-Y',strtotime($receivedType->created_at)) : '' ;\n                    $datas[$key]['holdDate'] = (!empty($holdType)) ?  date('d-m-Y',strtotime($holdType->created_at)) : '' ;\n                    $datas[$key]['shortDate'] = (!empty($shortType)) ?  date('d-m-Y',strtotime($shortType->created_at)) : '' ;\n\n                    $status = collect($ship->boxStatuses)->last();\n                    $shipmentStatus = collect($ship->shipment->shipmentStatus)->last();\n                    $datas[$key]['lastStatus'] = (!empty($status)) ? $status->status->name : $shipmentStatus->status->name ;\n\n                    if($datas[$key]['lastStatus'] == \"Shipment on hold\") {\n                        $datas[$key]['style'] = 'background-color:#ffdb00;';\n                    } else if($datas[$key]['lastStatus'] == \"Pending\") {\n                        $datas[$key]['style'] = 'background-color:#ec1616e6;';\n                    } else {\n                        $datas[$key]['style'] = 'background-color:none;';\n                    }\n                    $datas[$key]['booking_number'] = $ship->shipment->booking_number;\n                    $datas[$key]['shipment_id'] = $getShip->shipment_id;\n                    $datas[$key]['full_name'] = $getShip->createdBy->full_name;\n                    $datas[$key]['view'] = '<a href=\"javascript:void(0)\" class=\"edit btn btn-secondary btn-sm detailedView\">View</a>';\n                }\n            }\n        return response()->json($datas);\n    }\n\n    public function detailed(Request $request)\n    {\n       $shipmentNumber = $request->shipmentNumber;\n       $boxNumber = $request->bookingNumber;\n       $querys = Boxes::with('boxStatuses','boxStatuses.status')\n                                    ->where('box_name',$boxNumber)->first();\n        $boxeses = $querys;\n        foreach($querys->boxStatuses as $key => $status) {\n            $boxeses['boxStatuses'][$key]['dated'] = date('d-m-Y',strtotime($status->created_at));\n        }\n        return response()->json($boxeses);\n    }\n\n    public function update_origin_id()\n    {\n\n            try {\n                \\DB::beginTransaction();\n\n                $shipments = Shipments::all();\n                foreach($shipments as $key => $shipment) {\n                    $shipments = Shipments::findOrFail($shipment->id);\n                    $shipments->origin_id = $shipments->branch_id;\n                    $shipments->save();\n\n                }\n                \\DB::commit();\n\n            } catch (\\Exception $e) {\n\n                \\DB::rollBack();\n                Log::error($e->getMessage());\n                toastr()->error($e->getMessage());\n                return redirect()->back();\n            }\n            toastr()->success(section_title() . ' Updated Successfully');\n            return redirect()->to(index_url());\n\n\n    }\n\n    public function transferGoods(Request $request) {\n\n\n        // $shipment_ids = explode(',', $request->sel_goods_id);\n        // if(!empty($shipment_ids)){\n        //     foreach( $shipment_ids as $shipment ){\n\n        //         $shipments = explode('-', $shipment);\n\n        //          $shipment_id = $shipments[0];\n        //             echo  $shipment_id ;\n\n        //          $invoice_number = $shipments[1];\n        //             echo    $invoice_number;\n\n        //     }\n        // }\n\n        // dd(\"sasa\");\n        // return false;\n\n        if($request->sel_goods_id != NULL){\n            $shipment_ids = explode(',', $request->sel_goods_id);\n            if(!empty($shipment_ids)){\n                foreach( $shipment_ids as $shipment ){\n\n                    $shipments = explode('-', $shipment);\n\n                     $box_id = $shipments[0];\n                     $invoice_number = $shipments[1];\n\n\n                    $box = Boxes::with('boxStatuses')->findOrFail($box_id);\n\n                    $status         = collect($box->boxStatuses)->last();\n                    $lastStausId    = $status->id;\n                    $lastStatusName = (!empty($status)) ? $status->status->name :'' ;\n\n\n                    $shipments = Shipments::findOrFail( $box->shipment_id );\n                    // $shipments->status_id =  17;\n                    // $shipments->save();\n\n                    $box->is_transfer =  1;\n                    $box->transfer_status =  'pending';\n                    $box->save();\n                    // ADD ONE STATUS TO BOX STATUS TABLE FOR TRACKING PURPOSE\n                    $bookings = new BoxesStatuses();\n                    $bookings->status_id = 17; // Transfer status id\n                    $bookings->box_id = $box_id;\n                    $bookings->created_at =  date('Y-m-d');\n                    $bookings->save();\n\n\n\n                    $goods_details = new GoodsDetails();\n\n                    $goods_details->sort_order = $shipments->sort_order;\n                    $goods_details->tracking_number = $shipments->booking_number;\n                    $goods_details->invoice_number = $invoice_number;\n                    $goods_details->box_id = $box_id;\n\n                    $goods_details->agency_id = $shipments->agency_id;\n                    $goods_details->current_status_id = $lastStausId; // last status id\n                    $goods_details->status = $lastStatusName; // status name\n                    $goods_details->sender_id = $shipments->sender_id;\n                    $goods_details->receiver_id = $shipments->receiver_id;\n                    $goods_details->company_id = $shipments->company_id;\n                    $goods_details->branch_id = $request->transfer_to;\n\n                    $goods_details->origin_id = $shipments->origin_id;\n                    $goods_details->is_transfer = $shipments->is_transfer;\n                    $goods_details->transfer_status = 'pending';\n                    $goods_details->prev_branch_id = $shipments->prev_branch_id;\n                    $goods_details->driver_id = $shipments->driver_id;\n                    $goods_details->staff_id = $shipments->staff_id;\n                    $goods_details->created_by = $shipments->created_by;\n                    $goods_details->updated_by = $shipments->updated_by;\n                    $goods_details->shiping_date = $shipments->shiping_date;\n                    $goods_details->receipt_number = $shipments->receipt_number;\n                    $goods_details->packing_type = $shipments->packing_type;\n                    $goods_details->courier_company = $shipments->courier_company;\n                    $goods_details->shiping_method = $shipments->shiping_method;\n                    $goods_details->payment_method = $shipments->payment_method;\n                    $goods_details->payment_status = $shipments->payment_status;\n                    $goods_details->number_of_pcs = 1;\n\n                    $goods_details->other_charges = $shipments->other_charges;\n                    $goods_details->discount = $shipments->discount;\n                    $goods_details->total_amount = $shipments->total_amount;\n                    $goods_details->barcode = $shipments->barcode;\n                    $goods_details->date = $shipments->date;\n                    $goods_details->tracking_url = $shipments->tracking_url;\n                    $goods_details->created_date = $shipments->created_date;\n                    $goods_details->shipping_method_id = $shipments->shipping_method_id;\n                    $goods_details->lrl_tracking_code = $shipments->lrl_tracking_code;\n                    $goods_details->normal_weight = $shipments->normal_weight;\n                    $goods_details->rate_normal_weight = $shipments->rate_normal_weight;\n                    $goods_details->amount_normal_weight = $shipments->amount_normal_weight;\n                    $goods_details->electronics_weight = $shipments->electronics_weight;\n                    $goods_details->rate_electronics_weight = $shipments->rate_electronics_weight;\n                    $goods_details->amount_electronics_weight = $shipments->amount_electronics_weight;\n                    $goods_details->rate_msic_weight = $shipments->rate_msic_weight;\n                    $goods_details->amount_msic_weight = $shipments->amount_msic_weight;\n                    $goods_details->other_weight = $shipments->other_weight;\n                    $goods_details->rate_other_weight = $shipments->rate_other_weight;\n                    $goods_details->amount_other_weight = $shipments->amount_other_weight;\n                    $goods_details->grand_total_weight = $shipments->grand_total_weight;\n                    $goods_details->rate_grand_total = $shipments->rate_grand_total;\n                    $goods_details->amount_grand_total = $shipments->amount_grand_total;\n                    $goods_details->msic_weight = $shipments->msic_weight;\n                    $goods_details->grand_total_box_value = $shipments->grand_total_box_value;\n                    $goods_details->total_freight = $shipments->total_freight;\n                    $goods_details->misc_freight = $shipments->misc_freight;\n                    $goods_details->document_charge = $shipments->document_charge;\n                    $goods_details->grand_total = $shipments->grand_total;\n                    $goods_details->package_total_amount = $shipments->package_total_amount;\n                    $goods_details->package_total_quantity = $shipments->package_total_quantity;\n                    $goods_details->ship_id = $shipments->ship_id;\n                    $goods_details->collected_by = $shipments->collected_by;\n                    $goods_details->delivery_type = $shipments->delivery_type;\n                    $goods_details->comment_box = $shipments->comment_box;\n                    $goods_details->time = $shipments->time;\n\n\n                    $goods_details->weight = $box->weight;\n                    $goods_details->rate = $box->rate;\n                    $goods_details->packing_charge = $box->box_packing_charge;\n\n                    $goods_details->length = $box->boxDimension->length;\n                    $goods_details->width = $box->boxDimension->width;\n                    $goods_details->height = $box->boxDimension->height;\n\n                    $goods_details->transfer_date =  $request->transfer_date;\n                    // $goods_details->received_date =  ;\n\n                    $goods_details->save();\n\n\n\n                    $shipmentTransfer = new ShipmentTransfers();\n                    $shipmentTransfer->goods_details_id = $goods_details->id;\n                    $shipmentTransfer->box_id = $box->id;\n                    $shipmentTransfer->tracking_number = $shipments->booking_number;\n                    $shipmentTransfer->invoice_number = $invoice_number;\n                    $shipmentTransfer->transfer_from = $request->transfer_from;\n                    $shipmentTransfer->transfer_to = $request->transfer_to;\n                    $shipmentTransfer->driver_id = $request->driver_id;\n                    $shipmentTransfer->transferred_status =  'pending';\n\n                    $shipmentTransfer->save();\n\n                    $goods_details->shipment_transfer_id = $shipmentTransfer->id;\n                    $goods_details->save();\n\n\n\n\n                }\n\n\n                return response()->json([\n                    'success' => true, 'message' => 'Transferred Successfully'\n                ]);\n            }\n            }\n            else {\n                return response()->json([\n                    'success' => true, 'message' => 'No Goods selected !'\n                ]);\n            }\n\n\n    }\n\n\n    public function transferredGoods(Request $request) {\n\n        // $querys = GoodsDetails::with('shipmentTransfer','shipmentTransfer.transferFrom', 'shipmentTransfer.transferTo')\n        //                     ->where('origin_id',branch()->id)\n        //                     ->where('is_transfer', 1);\n\n        // $goods = $querys->get();\n\n        $goods = Boxes::with('boxTransfer','boxTransfer.transferTo', 'boxTransfer.transferFrom')->where('is_transfer', 1)->get();\n        // dd($goods);\n\n        return view('branches.shipments.transferred_goods',compact( 'goods' ));\n\n    }\n\n    public function pendingGoods(Request $request) {\n\n        $querys = GoodsDetails::with('shipmentTransfer','shipmentTransfer.transferFrom', 'shipmentTransfer.transferTo')\n                            ->where('branch_id',branch()->id)\n                            ->where('transfer_status', 'pending');\n\n        $goods = $querys->get();\n\n        return view('branches.shipments.pending_goods',compact( 'goods' ));\n\n    }\n\n\n    public function transferConfirm(Request $request) {\n\n        if($request->sel_goods_id != NULL){\n            $goods_ids = explode(',', $request->sel_goods_id);\n            if(!empty($goods_ids)){\n                foreach( $goods_ids as $goods ){\n                    $goods_details = GoodsDetails::findOrFail($goods);\n\n                        $shipmentTransfer = ShipmentTransfers::findOrFail( $goods_details->shipment_transfer_id );\n                        $shipmentTransfer->transferred_status =  'confirmed';\n                        $shipmentTransfer->save();\n\n                    $goods_details->transfer_status =  'confirmed';\n\n                    $goods_details->received_date = date('Y-m-d H:i:s');\n                    $goods_details->save();\n\n                }\n\n                return response()->json([\n                    'success' => true, 'message' => 'Transfer Confirmed Successfully'\n                ]);\n            }}\n            else {\n                return response()->json([\n                    'success' => true, 'message' => 'No Goods selected !'\n                ]);\n            }\n\n\n    }\n    public function allGoods(Request $request) {\n\n\n        if ($request->has('keyword') != \"\") {\n            // $keyword = $request->keyword;\n            // $client_ids = Customers::where(\"phone\", \"like\", \"%$keyword%\")\n            //     ->orWhere(\"identification_number\", \"like\", \"%$keyword%\")\n            //     ->get()\n            //     ->pluck('id');\n\n            // $shipments = GoodsDetails::where('branch_id',branch()->id)->query();\n            // if (count($client_ids) > 0) {\n            //     $shipments = $shipments->whereIn(\"sender_id\", $client_ids);\n            // }\n            // $shipments = $shipments->orWhere('booking_number', 'like', '%' . $keyword . '%');\n\n            // $shipments = $shipments->orderBy('created_at', 'desc')->get();\n            $goods = GoodsDetails::where('branch_id',branch()->id)->where('transfer_status', 'confirmed')->latest()->orderBy('created_at', 'desc')->get();\n\n\n        } else {\n            $goods = GoodsDetails::where('branch_id',branch()->id)->where('transfer_status', 'confirmed')->latest()->orderBy('created_at', 'desc')->get();\n        }\n\n        return view('branches.shipments.allgoods', compact('goods'));\n\n\n    }\n\n    public function updateSortOrder(Request $request){\n        print_r( $request->id);\n        echo \"sasas\";\n        die;\n    }\n\n    public function shipmentlistReport(Request $request) {\n\n        return view('branches.shipments.shipmentsReportList',compact('statuses','datas'));\n\n    }\n\n    public function getBoxData(Request $request){\n        $boxName = $request->query('box_name');\n        $boxData = Boxes::where('box_name', $boxName)->first();\n\n        if ($boxData) {\n            return response()->json(['success' => true, 'data' => $boxData]);\n        } else {\n            return response()->json(['success' => false, 'message' => 'Box not found']);\n        }\n    }\n    public function exportView(Request $request)\n    {\n\n        // Get input data\n        $fromDate = $request->input('from_date');\n        $toDate = $request->input('to_date');\n        $search = $request->input('search');\n        $branchId = $request->input('branch');\n\n        // Create a query\n        $query = Shipments::with('driver', 'sender', 'receiver')->where('branch_id', branch()->id);\n\n        // Apply filters\n        if ($branchId) {\n            $query->where('branch_id', $branchId);\n        }\n\n        if ($fromDate) {\n            $fromDate = Carbon::createFromFormat('d/m/Y', $fromDate)->startOfDay()->toDateString();\n            $query->whereDate('created_at', '>=', $fromDate);\n        }\n\n        if ($toDate) {\n            $toDate = Carbon::createFromFormat('d/m/Y', $toDate)->endOfDay()->toDateString();\n            $query->whereDate('created_at', '<=', $toDate);\n        }\n\n        if ($search) {\n            $query->where(function ($query) use ($search) {\n                $query->where('booking_number', 'like', \"%$search%\")\n                    ->orWhereHas('sender', function ($query) use ($search) {\n                        $query->where('phone', 'like', \"%$search%\");\n                    })\n                    ->orWhereHas('receiver', function ($query) use ($search) {\n                        $query->where('phone', 'like', \"%$search%\");\n                    });\n            });\n        }\n\n        // Get all data\n        $shipments = $query->latest()->get();\n        return view(\"superadmin.shipments.report\", compact(\"shipments\"));\n\n    }\n\n\n}\n"
        }
    ]
}